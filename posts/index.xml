<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on 槎城小子</title>
    <link>https://qinry.github.io/posts/</link>
    <description>Recent content in Posts on 槎城小子</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>lixiaoqin490@gmail.com (槎城小子)</managingEditor>
    <webMaster>lixiaoqin490@gmail.com (槎城小子)</webMaster>
    <copyright>©2021, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 09 Nov 2021 09:46:00 +0800</lastBuildDate>
    
        <atom:link href="https://qinry.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Mybatis 快速入门</title>
        <link>https://qinry.github.io/posts/2021/11/mybatis-crash/</link>
        <pubDate>Tue, 09 Nov 2021 09:46:00 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Tue, 09 Nov 2021 09:46:00 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/11/mybatis-crash/</guid>
        <description>为Mybatis创建Gradle项目 使用idea创建gradle项目 项目结构： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 ├── build.gradle ├── gradle │ └── wrapper │</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>mybatis</category>
            
          
            
              <category>orm</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>快速开始 Java8 文件IO</title>
        <link>https://qinry.github.io/posts/2021/11/quickstart-java8-io/</link>
        <pubDate>Thu, 04 Nov 2021 21:37:57 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Thu, 04 Nov 2021 21:37:57 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/11/quickstart-java8-io/</guid>
        <description>Files和Paths快速使用 演示用的文本： 1 2 3 Hi, I&amp;#39;m qinry! I am learning java8. Files and Paths are new untilty classes for input/output. 创建demo.txt的符号链接demo.link 1 ln -s demo.txt demo.link</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>io</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>快速开始Java8流式编程</title>
        <link>https://qinry.github.io/posts/2021/11/quickstart-java8-stream-programming/</link>
        <pubDate>Tue, 02 Nov 2021 11:01:21 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Tue, 02 Nov 2021 11:01:21 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/11/quickstart-java8-stream-programming/</guid>
        <description>流是什么 流（Streams）是与任何特定存储机制无关的元素序列——实际上，我们说流是 “没有存储 “的。 集合优化了对象的存储，而流（Stream</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>快速开始Java8函数式编程</title>
        <link>https://qinry.github.io/posts/2021/11/quickstart-java8-functional-programming/</link>
        <pubDate>Tue, 02 Nov 2021 06:12:46 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Tue, 02 Nov 2021 06:12:46 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/11/quickstart-java8-functional-programming/</guid>
        <description>Java 8 Lambda 表达式和方法引用 (Method References) 允许你以函数式编程。函数式编程抽象行为，通过合并现有代码来生成新功能而不是从头开始编写所有内容，我们可以更快地获得</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>Mongodb 快速开始</title>
        <link>https://qinry.github.io/posts/2021/10/mongodb-crash/</link>
        <pubDate>Tue, 26 Oct 2021 20:39:48 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Tue, 26 Oct 2021 20:39:48 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/10/mongodb-crash/</guid>
        <description>简介 MongoDB，是一款分布式文件存储数据库系统。是NoSQL类型（Not Only SQL）。旨在为WEB应用提供可扩展的高性能数据存储解决方案。</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>mongodb</category>
            
          
        
        
          
            
              <category>数据库</category>
            
          
        
        
      </item>
      
      <item>
        <title>NIO 网络编程</title>
        <link>https://qinry.github.io/posts/2021/10/nio-network/</link>
        <pubDate>Tue, 26 Oct 2021 17:16:15 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Tue, 26 Oct 2021 17:16:15 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/10/nio-network/</guid>
        <description>IO模型 有三个重要的IO模型： BIO 同步阻塞IO NIO 同步非阻塞IO AIO 异步IO 同步与异步。它们是相对于应用程序与系统内核交互讨论的。 同步是应用触发I</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>io</category>
            
          
        
        
          
            
              <category>网络编程</category>
            
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>Vue.js入门</title>
        <link>https://qinry.github.io/posts/2021/09/vue-js/</link>
        <pubDate>Mon, 20 Sep 2021 06:38:50 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Mon, 20 Sep 2021 06:38:50 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/09/vue-js/</guid>
        <description>概述 Vue，一套用于构建用户界面的渐进式框架，被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，还支持事件驱动。 什么是MVVM MVV</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>vue</category>
            
          
        
        
          
            
              <category>web</category>
            
          
        
        
      </item>
      
      <item>
        <title>在MySQL学习SQL</title>
        <link>https://qinry.github.io/posts/2021/08/mysql-sql-statement/</link>
        <pubDate>Thu, 26 Aug 2021 09:06:53 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Thu, 26 Aug 2021 09:06:53 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/08/mysql-sql-statement/</guid>
        <description>概述 数据库（database） 保存有组织的数据的容器（通常是一个或一组文件） 数据库管理系统（DBMS，Database Management System） 一种软</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>sql</category>
            
          
            
              <category>mysql</category>
            
          
        
        
          
            
              <category>数据库</category>
            
          
        
        
      </item>
      
      <item>
        <title>CSS 语法</title>
        <link>https://qinry.github.io/posts/2021/08/css-grammar/</link>
        <pubDate>Mon, 23 Aug 2021 20:16:46 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Mon, 23 Aug 2021 20:16:46 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/08/css-grammar/</guid>
        <description>概述 CSS，即Cascading Style Sheets，中文意思层叠样式表。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>css</category>
            
          
        
        
          
            
              <category>web</category>
            
          
        
        
      </item>
      
      <item>
        <title>HTML 语法</title>
        <link>https://qinry.github.io/posts/2021/08/html-grammar/</link>
        <pubDate>Mon, 23 Aug 2021 13:22:52 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Mon, 23 Aug 2021 13:22:52 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/08/html-grammar/</guid>
        <description>概述 HTML，即Hyper Text Markup Language，中文是超文本标记语言 W3C标准： 结构化标准(HTML,XML) 表现标准语言(CSS) 行为标准</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>html</category>
            
          
        
        
          
            
              <category>web</category>
            
          
        
        
      </item>
      
      <item>
        <title>Javascript 语法</title>
        <link>https://qinry.github.io/posts/2021/08/javascript-grammar/</link>
        <pubDate>Sat, 21 Aug 2021 10:08:07 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Sat, 21 Aug 2021 10:08:07 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/08/javascript-grammar/</guid>
        <description>概述 Javascript 一种Web的编程语言，是互联网最流行的脚本语言。可以插入到HTML中，被所有的浏览器所执行。 ECMAScript 6，简称 ES6。ECMAScript 可以</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>javascript</category>
            
          
        
        
          
            
              <category>web</category>
            
          
        
        
      </item>
      
      <item>
        <title>Maven 入门</title>
        <link>https://qinry.github.io/posts/2021/08/maven-basic/</link>
        <pubDate>Fri, 20 Aug 2021 15:47:23 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Fri, 20 Aug 2021 15:47:23 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/08/maven-basic/</guid>
        <description>什么是Maven Apache Maven 是一个软件项目管理工具。基于项目对象模型的概念，它可以通过配置信息来管理项目的构建、报告和文档这些行为。 其目标旨在： 使项</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>maven</category>
            
          
        
        
          
            
              <category>构建工具</category>
            
          
        
        
      </item>
      
      <item>
        <title>Git 分支</title>
        <link>https://qinry.github.io/posts/2021/08/git-branch/</link>
        <pubDate>Wed, 18 Aug 2021 17:44:40 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Wed, 18 Aug 2021 17:44:40 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/08/git-branch/</guid>
        <description>创建分支 git branch &amp;lt;分支名&amp;gt; git branch dev 查看分支 git branch # 等价于git branch -a，显示所有分支 效果： * 表示当前活跃的分支 切换分支 git checkout &amp;lt;分支名&amp;</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
        
          
            
              <category>git</category>
            
          
        
        
      </item>
      
      <item>
        <title>Redis集群</title>
        <link>https://qinry.github.io/posts/2021/07/redis-cluster/</link>
        <pubDate>Wed, 14 Jul 2021 17:02:54 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Wed, 14 Jul 2021 17:02:54 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/07/redis-cluster/</guid>
        <description>一、集群架构 (1)所有的 Redis 节点彼此互联（PING-PONG 机制），内部使用二进制协议优化传输速度和带宽. (2)节点的 fail 是通过集群中超过半数的</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>redis</category>
            
          
        
        
          
            
              <category>数据库</category>
            
          
        
        
      </item>
      
      <item>
        <title>Redis 持久化</title>
        <link>https://qinry.github.io/posts/2021/07/redis-persistence/</link>
        <pubDate>Wed, 14 Jul 2021 17:01:46 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Wed, 14 Jul 2021 17:01:46 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/07/redis-persistence/</guid>
        <description>一、Redis 持久化存储方式 由于 Redis 的值放在内存中，为防止突然断电等特殊情况的发生，需要对数据进行持久化备份。即将内存数据保存 到硬盘。 1.1.RDB 持久化</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>redis</category>
            
          
        
        
          
            
              <category>数据库</category>
            
          
        
        
      </item>
      
      <item>
        <title>Redis 入门</title>
        <link>https://qinry.github.io/posts/2021/07/redis/</link>
        <pubDate>Wed, 14 Jul 2021 16:54:53 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Wed, 14 Jul 2021 16:54:53 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/07/redis/</guid>
        <description>简单介绍Redis。它是一款键值数据库。它还是非关系型数据库（Nosql）。常常用作内存缓存，应用于频繁的读写场景中。 一、基本数据结构 Red</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>redis</category>
            
          
        
        
          
            
              <category>数据库</category>
            
          
        
        
      </item>
      
      <item>
        <title>JDBC的使用</title>
        <link>https://qinry.github.io/posts/2021/04/java-jdbc/</link>
        <pubDate>Fri, 02 Apr 2021 19:44:50 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Fri, 02 Apr 2021 19:44:50 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/04/java-jdbc/</guid>
        <description>什么是JDBC JDBC是执行SQL的java API，为关系型数据库提供访问。JDBC可以在更大平台使用像Windows、Mac、Unix等等</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>第三方类库</category>
            
          
            
              <category>mysql</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>MySQL事务与SQL优化</title>
        <link>https://qinry.github.io/posts/2021/03/transaction/</link>
        <pubDate>Mon, 01 Mar 2021 19:43:16 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Mon, 01 Mar 2021 19:43:16 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/03/transaction/</guid>
        <description>一、事务的语法 非常简单 set autocommit = 0; -- 关闭自动提交 start tansaction; -- 事务开始，也可以换成begin; ... -- 一系列SQL语句完成一个操作 -- 当执行commit或ro</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>事务</category>
            
          
            
              <category>mysql</category>
            
          
        
        
          
            
              <category>数据库</category>
            
          
        
        
      </item>
      
      <item>
        <title>JSON解析</title>
        <link>https://qinry.github.io/posts/2021/02/java-json-parse/</link>
        <pubDate>Mon, 08 Feb 2021 12:47:14 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Mon, 08 Feb 2021 12:47:14 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/02/java-json-parse/</guid>
        <description>一、JSON概述 JSON(JavaScriptObject Notation, JS 对象简谱) 是一种轻量级的数据交换格式。它基于 ECMAScript (欧洲计算机协会制定的js规范)的一个子集，采用完全独立于编程语言的文本</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>第三方类库</category>
            
          
            
              <category>json</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>多线程</title>
        <link>https://qinry.github.io/posts/2021/02/java-concurrent/</link>
        <pubDate>Fri, 05 Feb 2021 22:32:16 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Fri, 05 Feb 2021 22:32:16 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/02/java-concurrent/</guid>
        <description>一、概述 进程：是一个内存中运行的应用程序，每个进程都有一个独立空间 线程：是进程中的一个执行路径，共享一个内存空间，线程之间可以自由切换，并发</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>并发编程</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>链表</title>
        <link>https://qinry.github.io/posts/2021/01/algorithm-list/</link>
        <pubDate>Sun, 31 Jan 2021 22:14:45 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Sun, 31 Jan 2021 22:14:45 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/01/algorithm-list/</guid>
        <description>一、数组与链表 链表 [Linked List]：链表是由一组不必相连（不必相连：可以连续也可以不连续）的内 存结构（节点），按特定的顺序链接在一起的抽象数据类</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>链表</category>
            
          
        
        
          
            
              <category>算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>泛型</title>
        <link>https://qinry.github.io/posts/2021/01/java-generics/</link>
        <pubDate>Sun, 31 Jan 2021 17:09:15 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Sun, 31 Jan 2021 17:09:15 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/01/java-generics/</guid>
        <description>理解泛型 泛型是将类型参数化，类定义时一些成员变量和一些方法形式参数的类型成为变量，在使用时再传入一个具体类型，进一步抽象了变量的类型。好像是</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>泛型</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>Java常用类库</title>
        <link>https://qinry.github.io/posts/2021/01/java-common-class-library/</link>
        <pubDate>Sun, 31 Jan 2021 17:08:58 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Sun, 31 Jan 2021 17:08:58 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/01/java-common-class-library/</guid>
        <description>一些常用类库的使用，没有列出完整代码，只有只有代码的主要部分 一、java.util.Objects java.lang.Objects是JDK</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>常用类库</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>面向对象编程</title>
        <link>https://qinry.github.io/posts/2021/01/java-oriented-object/</link>
        <pubDate>Thu, 21 Jan 2021 14:27:16 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Thu, 21 Jan 2021 14:27:16 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/01/java-oriented-object/</guid>
        <description>一、类和对象 面向对象是相对于面向过程来讲的，指的是把 相关的数据和方法组织为一个整体来看待。面向过程关注的是执行的过程，面向对象关注的是具备功</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>面向对象编程</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>Java基础语法</title>
        <link>https://qinry.github.io/posts/2021/01/java-basic-grammar/</link>
        <pubDate>Thu, 21 Jan 2021 14:26:51 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Thu, 21 Jan 2021 14:26:51 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/01/java-basic-grammar/</guid>
        <description>一、基本数据类型 Java的数据类型有基本数据类型（primitive）、类（包括枚举）、接口（包括注解）和数组，后三个类型有被称为引用类型（</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>基础语法</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Java开发环境搭建与介绍</title>
        <link>https://qinry.github.io/posts/2021/01/java-setup-development-environment/</link>
        <pubDate>Sat, 16 Jan 2021 19:11:45 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Sat, 16 Jan 2021 19:11:45 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2021/01/java-setup-development-environment/</guid>
        <description>一、环境搭建 开发Java工程离不开JDK（Java Development Kit Java开发工具包），这个是最基本的必须下载和安装，还有为了方便开发者编写、运行和调试</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
        
          
            
              <category>软件安装</category>
            
          
        
        
      </item>
      
      <item>
        <title>快速开始单件模式</title>
        <link>https://qinry.github.io/posts/2020/11/designpatterns-singleton/</link>
        <pubDate>Mon, 16 Nov 2020 08:08:26 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Mon, 16 Nov 2020 08:08:26 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2020/11/designpatterns-singleton/</guid>
        <description>一、什么是单件模式 单件模式是在设计模式中常用的一种需要为类只实例化唯一对象的设计方案。意思是说，对于某个类来说，其对象只能创建一个，且每次使</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
        
          
            
              <category>设计模式</category>
            
          
        
        
      </item>
      
      <item>
        <title>Java 压缩文件的IO流</title>
        <link>https://qinry.github.io/posts/2020/04/java-zip/</link>
        <pubDate>Tue, 28 Apr 2020 14:50:00 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Tue, 28 Apr 2020 14:50:00 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2020/04/java-zip/</guid>
        <description>Java I/O库提供压缩功能输入、输出流，这些类是按字节方式处理，常用的压缩类有DeflaterOutputStream和它的子类ZipOutpu</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>jar</category>
            
          
            
              <category>zip</category>
            
          
            
              <category>io</category>
            
          
        
        
          
            
              <category>java</category>
            
          
        
        
      </item>
      
      <item>
        <title>简简单单知道递归</title>
        <link>https://qinry.github.io/posts/2020/04/algorithm-recursion/</link>
        <pubDate>Mon, 27 Apr 2020 20:21:23 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Mon, 27 Apr 2020 20:21:23 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2020/04/algorithm-recursion/</guid>
        <description>一、递归的含义 递归就是函数或方法通过调用自己本身来达到解决问题的目的，这种解法形式叫递归。用欧几里得算法的 Java 描述说明问题： 任意一对非负整数 p</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
          
            
              <category>递归</category>
            
          
        
        
          
            
              <category>算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>git入门使用</title>
        <link>https://qinry.github.io/posts/2019/10/git-simple-usage/</link>
        <pubDate>Sun, 20 Oct 2019 08:50:01 +0800</pubDate>
        <author>lixiaoqin490@gmail.com (槎城小子)</author>
        <atom:modified>Sun, 20 Oct 2019 08:50:01 +0800</atom:modified>
        <guid>https://qinry.github.io/posts/2019/10/git-simple-usage/</guid>
        <description>配置Git 提供Git用户名和邮箱 1 2 git config --global user.name &amp;#34;username&amp;#34; git config --global user.email &amp;#34;usernaem@example.com&amp;#34; 忽略文件 创建文件 .gitignore ，让Git忽略某目录中的所有文件(不跟踪这些文件)，使用它可以避免</description>
        
        <dc:creator>槎城小子</dc:creator>
        
        
        
        
        
          
            
              <category>git</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
