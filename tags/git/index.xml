<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on qinry&#39;s blog</title>
    <link>https://qinry.github.io/tags/git/</link>
    <description>Recent content in git on qinry&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 20 Oct 2019 08:50:01 +0800</lastBuildDate>
    
	<atom:link href="https://qinry.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git入门使用</title>
      <link>https://qinry.github.io/posts/2019-10-20-git-simple-usage/</link>
      <pubDate>Sun, 20 Oct 2019 08:50:01 +0800</pubDate>
      
      <guid>https://qinry.github.io/posts/2019-10-20-git-simple-usage/</guid>
      <description>配置Git 提供Git用户名和邮箱
 $ git config &amp;ndash;global user.name &amp;ldquo;username&amp;rdquo; $ git config &amp;ndash;global user.email &amp;ldquo;usernaem@example.com&amp;rdquo;
 忽略文件 创建文件 .gitignore ，让Git忽略某目录中的所有文件(不跟踪这些文件)，使用它可以避免项目混乱
初始化仓库  $ git init
 仓库是程序中被Git主动跟踪的一组文件。Git用来管理仓库的文件都存储在隐藏的.git/中，你根本不需要与这个目录打交道，但千万不要删除这个目录，否则将丢弃项目的所有历史记录。
检查状态  $ git status
 在Git中，分支 是项目的一个版本。提交 是项目在特定时间点的快照。
文件添加到仓库  $ git add [&amp;lt; file &amp;gt; | &amp;lt; path &amp;gt;]
 只是让Git开始关注指定文件或目录中的文件。但未提交。
执行提交  $ git commit -m &amp;lt; message &amp;gt;
 标志-m 让Git将接下来的消息记录到项目的历史记录中
 $ git commit -am &amp;lt; message &amp;gt;</description>
    </item>
    
  </channel>
</rss>